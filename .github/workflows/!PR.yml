name: PR

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - ready_for_review
      - labeled

jobs:
  env: # setup shared env
    runs-on: ubuntu-latest
    env:
      # https://github.com/actions/runner-images#available-images
      WINDOWS_IMAGE: windows-latest
      MACOS_IMAGE: macos-latest
      UBUNTU_IMAGE: ubuntu-latest

    outputs:
      python-version: '3.8'
      matrix-for-draft: '{"os": ["${{env.WINDOWS_IMAGE}}"]}'
      matrix-for-ready: '{"os": ["${{env.UBUNTU_IMAGE}}", "${{env.MACOS_IMAGE}}"]}'
      windows-image: ${{env.WINDOWS_IMAGE}}
      ubuntu-image: ${{env.UBUNTU_IMAGE}}
      macos-image: ${{env.MACOS_IMAGE}}

    steps:
      - run: echo successfully

  changes: # detect changes
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.filter.outputs.src }}
      scripts: ${{ steps.filter.outputs.scripts }}
      doc: ${{ steps.filter.outputs.doc }}
      build: ${{ steps.filter.outputs.build }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            src:
              - '.github/workflows/pytest.yml'
              - '.github/workflows/guitest.yml'
              - '.github/workflows/coverage.yml'
              - '.github/actions/**'
              - 'src/**'
              - 'requirements*'
            scripts:
              - '.github/workflows/scripttest.yml'
              - '.github/actions/**'
              - 'scripts/**'
              - 'src/**'
              - 'requirements*'
            doc:
              - '.github/workflows/documentation.yml'
              - '.github/actions/**'
              - 'doc/**'
              - 'src/**'
              - 'requirements*'
            build:
              - '.github/workflows/build*.yml'
              - '.github/actions/**'
              - 'build/**'
              - 'src/**'
              - 'requirements*'

  gatekeeper: # check user's permissions
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR has label
        id: label_check
        uses: docker://agilepathway/pull-request-label-checker:v1.2.9
        with:
          one_of: 'PR: safe to check'
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          allow_failure: true

      - name: Check if user has write access
        if: steps.label_check.outputs.label_check == 'failure'
        uses: lannonbr/repo-permission-check-action@2bb8c89ba8bf115c4bfab344d6a6f442b24c9a1f
        with:
          permission: write
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ----------------------------------------------------------------------------
  # PR stage: Draft
  pytest:
    needs: [ changes, gatekeeper, env ]
    if: ${{ needs.changes.outputs.src == 'true' }}
    uses: ./.github/workflows/pytest.yml
    secrets:
      PYTEST_SENTRY_DSN: ${{secrets.PYTEST_SENTRY_DSN}}
    with:
      python-version: ${{needs.env.outputs.python-version}}
      matrix: ${{needs.env.outputs.matrix-for-draft}}

  guitest:
    needs: [ changes, gatekeeper, env ]
    if: ${{ needs.changes.outputs.src == 'true' }}
    uses: ./.github/workflows/guitest.yml
    secrets:
      PYTEST_SENTRY_DSN: ${{secrets.PYTEST_SENTRY_DSN}}
    with:
      python-version: ${{needs.env.outputs.python-version}}
      matrix: ${{needs.env.outputs.matrix-for-draft}}

  scripttest:
    needs: [ changes, env ]
    if: ${{ needs.changes.outputs.scripts == 'true' }}
    uses: ./.github/workflows/scripttest.yml
    with:
      python-version: ${{needs.env.outputs.python-version}}

  coverage:
    needs: [ changes, gatekeeper, env ]
    if: ${{ needs.changes.outputs.src == 'true' }}
    uses: ./.github/workflows/coverage.yml
    secrets:
      PYTEST_SENTRY_DSN: ${{secrets.PYTEST_SENTRY_DSN}}
      CODACY_PROJECT_TOKEN: ${{secrets.CODACY_PROJECT_TOKEN}}
    with:
      python-version: ${{needs.env.outputs.python-version}}

  # ----------------------------------------------------------------------------
  # PR stage: Ready
  pytest_nix:
    needs: [ changes, gatekeeper, env ]
    if: ${{needs.changes.outputs.src == 'true' && !github.event.pull_request.draft}}
    uses: ./.github/workflows/pytest.yml
    secrets:
      PYTEST_SENTRY_DSN: ${{secrets.PYTEST_SENTRY_DSN}}
    with:
      python-version: ${{needs.env.outputs.python-version}}
      matrix: ${{needs.env.outputs.matrix-for-ready}}

  guitest_nix:
    needs: [ changes, gatekeeper, env ]
    if: ${{needs.changes.outputs.src == 'true' && !github.event.pull_request.draft}}
    uses: ./.github/workflows/guitest.yml
    secrets:
      PYTEST_SENTRY_DSN: ${{secrets.PYTEST_SENTRY_DSN}}
    with:
      python-version: ${{needs.env.outputs.python-version}}
      matrix: ${{needs.env.outputs.matrix-for-ready}}

  # build binaries
  ubuntu:
    needs: [ changes, env ]
    if: ${{needs.changes.outputs.build == 'true' && !github.event.pull_request.draft}}
    uses: ./.github/workflows/build_ubuntu.yml
    with:
      upload: false
      os: ${{needs.env.outputs.ubuntu-image}}
      python-version: ${{needs.env.outputs.python-version}}

  windows:
    needs: [ changes, env ]
    if: ${{needs.changes.outputs.build == 'true' && !github.event.pull_request.draft}}
    uses: ./.github/workflows/build_windows.yml
    with:
      upload: false
      os: ${{needs.env.outputs.windows-image}}
      python-version: ${{needs.env.outputs.python-version}}

  # check documentation build
  documentation:
    needs: [ changes, env ]
    if: ${{needs.changes.outputs.doc == 'true' && !github.event.pull_request.draft}}
    uses: ./.github/workflows/documentation.yml
    with:
      python-version: ${{needs.env.outputs.python-version}}
