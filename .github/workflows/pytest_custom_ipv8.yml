name: Run pytest with custom ipv8 version

on:
  workflow_call:
    inputs:
      python-version:
        default: '3.8'
        type: string
        required: true

      matrix:
        default: '{"os":["windows-latest", "macos-latest", "ubuntu-latest"]}'
        type: string
        required: false

      ipv8-git-ref:
        default: 'master'
        type: string
        required: true

  workflow_dispatch:
    inputs:
      python-version:
        description: Python version
        default: '3.8'
        type: string
        required: true

      matrix:
        default: '{"os":["windows-latest", "macos-latest", "ubuntu-latest"]}'
        type: string
        required: false

      ipv8-git-ref:
        description: IPv8 Git Ref
        default: 'master'
        type: string
        required: true

permissions:
  contents: read

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(inputs.matrix)}}

    defaults:
      run:
        shell: bash

    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Create python environment
        uses: ./.github/actions/pyenv
        with:
          python-version: ${{inputs.python-version}}
          requirements: requirements-test.txt

      - name: Upgrade pyipv8 to the specified version
        run: |
          python -m pip install --upgrade pyipv8@git+https://github.com/Tribler/py-ipv8.git@${{inputs.ipv8-git-ref}}
          python -m pip show pyipv8

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        uses: ./.github/actions/windows_dependencies

      - name: Export env
        uses: cardinalby/export-env-action@v2
        with:
          envFile: ./.github/workflows/vars/pytest.env
          expand: true

      - name: Add --looptime
        if: runner.os != 'Windows'
        run: |
          echo "PYTEST_CORE_ARGUMENTS=${PYTEST_CORE_ARGUMENTS} --looptime" >> $GITHUB_ENV
          echo "PYTEST_TUNNELS_ARGUMENTS=${PYTEST_TUNNELS_ARGUMENTS} --looptime" >> $GITHUB_ENV

      - name: Run Pytest
        if: ${{!inputs.enable_profiling}}
        run: |
          pytest ${PYTEST_CORE_ARGUMENTS}

      - name: Run Tunnels Tests
        if: ${{!inputs.enable_profiling}}
        run: |
          pytest ${PYTEST_TUNNELS_ARGUMENTS}
